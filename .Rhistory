dD.nat[ii] <- D.KG.nat[ii] - D.KGP[ii]
dD.old[ii] <- D.KG.old[ii] - D.KGP[ii]
dD.exp[ii] <- D.KG.exp[ii] - D.KGP[ii]
}
results <- list(dS.nat,dS.old,dS.exp,S.KG.nat,S.KG.exp,S.KGP,S.KG.old,dD.nat,dD.old,dD.exp,D.KG.nat,D.KG.exp,D.KGP,D.KG.old,D.K.KGP.KG,D.K.KO.KG,S.K.KGP.KG,S.K.KO.KG,S.G.KGP.KG,D.G.KGP.KG)
names(results) <- c('dS.nat','dS.old','dS.exp','S.KG.nat','S.KG.exp','S.KGP','S.KG.old','dD.nat','dD.old','dD.exp','D.KG.nat','D.KG.exp','D.KGP','D.KG.old','D.K.KGP.KG','D.K.KO.KG','S.K.KGP.KG','S.K.KO.KG','S.G.KGP.KG','D.G.KGP.KG')
return(list(results=results, params = betaDf));
}
#Run Function
d <- dS.func.comm(sizes=sizes,means=summary(mod)$coef[,c('Estimate')],vcov=summary(mod)$vcov,its=10000)
dS.func.comm(sizes=sizes,means=summary(mod)$coef[,c('Estimate')],vcov=summary(mod)$vcov,its=10000)
rm(list=ls(all=TRUE))
library("psych")
library(rethinking)
library("plyr")
library("dplyr")
library(lme4)
library(lmerTest)
library("matlib")
library("MASS")
library("stringr")
data = read.csv("data/data for Pub.csv")
data$count <- 1
for (i in 1:dim(data)[1]){
data[i,'stream'] <- str_split(data$Full_name[i],'-')[[1]][1]
}
unique(data$stream)
data[which(data$stream=='El_Cedro'),'drainage'] <- 'El_Cedro'
ddply(data,c('drainage','stream','Habitat'),summarise,N=sum(count))
ddply(data,c('drainage','stream','Habitat'),summarise,N=mean(d15Nb))
ddply(data,c('drainage','stream','Habitat'),summarise,N=mean(d13Cb))
center.size <- 10
names(data)
data$Length.cen <- (data$Length - center.size)
# sample sizes
ddply(data,c('SP',"drainage","stream",'Habitat'),summarise,N=sum(count))
##################################################################################################################################
##################################################################################################################################
#15N Analyses
##################################################################################################################################
##################################################################################################################################
data$diff.d15 <- (data$d15N - data$d15Nb)
data$TP <- data$diff.d15
data$Length.cen <- (data$Length - center.size)
mod <- lmer(TP ~ 1 + FG*Habitat + FG*Habitat*Length.cen + (1|drainage), data=data )
summary(mod)
av <- anova(mod)
mod <- lmer(TP ~ 0 + FG:Habitat + FG:Habitat:Length.cen + (1|drainage), data=data )
summary(mod)
plot(mod)
rand <- ranef(mod)$drainage
rand$drainage <- dimnames(rand)[[1]]
dimnames(rand)[[2]][1] <- 'rand'
write.csv(summary(mod)$coef,"./Results/TP Parameters.csv")
write.csv(as.matrix(summary(mod)$vcov),"./Results/d15N vcov.csv")
write.csv(av,"./Results/TP Anova.csv")
#=================================================================================================================================
#15N Figures
#=================================================================================================================================
source('./R/2 d15N Figures New.R')
#=================================================================================================================================
#Contrasts
#=================================================================================================================================
coef <- summary(mod)$coef[,'Estimate']
vcov <- as.matrix(summary(mod)$vcov)
df <- summary(mod)$coef[,'df']
#Killifish natural sites slope comparison
L <- array(0,c(length(coef),2))
L[which(names(coef)=='FGKillifish:HabitatKGP:Length.cen'),] <- 1
L[which(names(coef)=='FGKillifish:HabitatKG.nat:Length.cen'),1] <- -1
L[which(names(coef)=='FGKillifish:HabitatKO:Length.cen'),2] <- -1
L.df <- array(0,c(length(coef)))
L.df[which(names(df)=='FGKillifish:HabitatKGP:Length.cen')] <- 1/3
L.df[which(names(df)=='FGKillifish:HabitatKG.nat:Length.cen')] <- 1/3
L.df[which(names(df)=='FGKillifish:HabitatKO:Length.cen')] <- 1/3
F.stat <- (coef %*% L %*% ginv(t(L)%*%vcov%*%L) %*% t(L) %*% coef) / 2
d <- L.df%*%df
F.stat
d
pf(F.stat, 2, d, lower.tail = FALSE, log.p = FALSE)
#Guppy natural site slope comparison
L <- array(0,c(length(coef)))
L[which(names(coef)=='FGGuppy:HabitatKG.nat:Length.cen')] <- 1
L[which(names(coef)=='FGGuppy:HabitatKGP:Length.cen')] <- -1
L.df <- array(0,c(length(coef)))
L.df[which(names(df)=='FGGuppy:HabitatKG.nat:Length.cen')] <- 0.5
L.df[which(names(df)=='FGGuppy:HabitatKGP:Length.cen')] <- 0.5
diff <- L%*%coef
se <- sqrt(L %*% vcov %*% L)
t <- diff / se
d <- L.df%*%df
t
d
2*pt(abs(t),df=d,lower.tail=FALSE)
#Killifish versus guppies in natural KG
#intercept-KG
L <- array(0,c(length(coef)))
L[which(names(coef)=='FGKillifish:HabitatKG.nat')] <- 1
L[which(names(coef)=='FGGuppy:HabitatKG.nat')] <- -1
L.df <- array(0,c(length(coef)))
L.df[which(names(df)=='FGKillifish:HabitatKG.nat')] <- 0.5
L.df[which(names(df)=='FGGuppy:HabitatKG.nat')] <- 0.5
diff <- L%*%coef
se <- sqrt(L %*% vcov %*% L)
t <- diff / se
d <- L.df%*%df
t
d
2*pt(abs(t),df=d,lower.tail=FALSE)
#Slopes
L <- array(0,c(length(coef)))
L[which(names(coef)=='FGKillifish:HabitatKG.nat:Length.cen')] <- 1
L[which(names(coef)=='FGGuppy:HabitatKG.nat:Length.cen')] <- -1
L.df <- array(0,c(length(coef)))
L.df[which(names(df)=='FGKillifish:HabitatKG.nat:Length.cen')] <- 0.5
L.df[which(names(df)=='FGGuppy:HabitatKG.nat:Length.cen')] <- 0.5
diff <- L%*%coef
se <- sqrt(L %*% vcov %*% L)
t <- diff / se
d <- L.df%*%df
t
d
2*pt(abs(t),df=d,lower.tail=FALSE)
#Slopes All
L <- array(0,c(length(coef),3))
L[which(names(coef)=='FGGuppy:HabitatKGP:Length.cen'),] <- 1
L[which(names(coef)=='FGGuppy:HabitatKG.nat:Length.cen'),1] <- -1
L[which(names(coef)=='FGGuppy:HabitatKG.exp:Length.cen'),2] <- -1
L[which(names(coef)=='FGGuppy:HabitatKG.old:Length.cen'),3] <- -1
L.df <- array(0,c(length(coef)))
L.df[which(names(df)=='FGGuppy:HabitatKGP:Length.cen')] <- 1/4
L.df[which(names(df)=='FGGuppy:HabitatKG.nat:Length.cen')] <- 1/4
L.df[which(names(coef)=='FGGuppy:HabitatKG.exp:Length.cen')] <- 1/4
L.df[which(names(coef)=='FGGuppy:HabitatKG.old:Length.cen')] <- 1/4
F.stat <- (coef %*% L %*% ginv(t(L)%*%vcov%*%L) %*% t(L) %*% coef) / 4
d <- L.df%*%df
F.stat
d
pf(F.stat, 3, d, lower.tail = FALSE, log.p = FALSE)
#Slopes All
L <- array(0,c(length(coef),4))
L[which(names(coef)=='FGKillifish:HabitatKGP:Length.cen'),] <- 1
L[which(names(coef)=='FGKillifish:HabitatKG.nat:Length.cen'),1] <- -1
L[which(names(coef)=='FGKillifish:HabitatKO:Length.cen'),2] <- -1
L[which(names(coef)=='FGKillifish:HabitatKG.exp:Length.cen'),3] <- -1
L[which(names(coef)=='FGKillifish:HabitatKG.old:Length.cen'),4] <- -1
L.df <- array(0,c(length(coef)))
L.df[which(names(df)=='FGKillifish:HabitatKGP:Length.cen')] <- 1/5
L.df[which(names(df)=='FGKillifish:HabitatKG.nat:Length.cen')] <- 1/5
L.df[which(names(df)=='FGKillifish:HabitatKO:Length.cen')] <- 1/5
L.df[which(names(coef)=='FGKillifish:HabitatKG.exp:Length.cen')] <- 1/5
L.df[which(names(coef)=='FGKillifish:HabitatKG.old:Length.cen')] <- 1/5
F.stat <- (coef %*% L %*% ginv(t(L)%*%vcov%*%L) %*% t(L) %*% coef) / 4
d <- L.df%*%df
F.stat
d
pf(F.stat, 4, d, lower.tail = FALSE, log.p = FALSE)
#=================================================================================================================================
#Similarity Contrasts for within site comparisons
#=================================================================================================================================
# Two kinds. First is the pairwise difference. Second is the squared pairwise difference or similarity.
sizes <- seq(center.size,30,length.out=25)#c(center.size:35)
#Function to calculate for N and C
dS.func.comm <- function(sizes,means,vcov,its){
S.KG.nat <- S.KG.old <- S.KG.exp <-  S.KGP  <- array(0,c(its))
dS.nat <- array(0,c(its))
dS.old <- array(0,c(its))
dS.exp <- array(0,c(its))
D.KG.nat <- D.KG.old <- D.KG.exp <-  D.KGP  <- array(0,c(its))
dD.nat <- array(0,c(its))
dD.old <- array(0,c(its))
dD.exp <- array(0,c(its))
D.K.KGP.KG <- array(0,c(its))
D.K.KO.KG <- array(0,c(its))
S.K.KGP.KG <- array(0,c(its))
S.K.KO.KG <- array(0,c(its))
S.G.KGP.KG <- array(0,c(its))
D.G.KGP.KG <- array(0,c(its))
for (ii in 1:its){
beta <- mvrnorm(1,means,vcov)
if(ii == 1){
betaDf = beta
}else{
betaDf = rbind(betaDf,beta)
}
#Nat
b.G.KG.nat <- beta['FGGuppy:HabitatKG.nat']#post_TP$N_alpha_KG_TG[ii]
b.z.G.KG.nat <- beta['FGGuppy:HabitatKG.nat:Length.cen']#post_TP$N_slope_KG_TG[ii]
b.K.KG.nat <- beta['FGKillifish:HabitatKG.nat']#post_TP$N_alpha_KG_TK[ii]
b.z.K.KG.nat <- beta['FGKillifish:HabitatKG.nat:Length.cen']#post_TP$N_slope_KG_TK[ii]
b.G.KGP <- beta['FGGuppy:HabitatKGP']#post_TP$N_alpha_KGP_TG[ii]
b.z.G.KGP <- beta['FGGuppy:HabitatKGP:Length.cen']#post_TP$N_slope_KGP_TG[ii]
b.K.KGP <- beta['FGKillifish:HabitatKGP']#post_TP$N_alpha_KGP_TG[ii]
b.z.K.KGP <- beta['FGKillifish:HabitatKGP:Length.cen']#post_TP$N_slope_KGP_TG[ii]
b.K.KO <- beta['FGKillifish:HabitatKO']#post_TP$N_alpha_KO_TK[ii]
b.z.K.KO <- beta['FGKillifish:HabitatKO:Length.cen']#post_TP$N_slope_KO_TK[ii]
#old Exp
b.G.KG.old <- beta['FGGuppy:HabitatKG.old']#post_TP$N_alpha_KG_TG[ii]
b.z.G.KG.old <- beta['FGGuppy:HabitatKG.old:Length.cen']#post_TP$N_slope_KG_TG[ii]
b.K.KG.old <- beta['FGKillifish:HabitatKG.old']#post_TP$N_alpha_KG_TK[ii]
b.z.K.KG.old <- beta['FGKillifish:HabitatKG.old:Length.cen']#post_TP$N_slope_KG_TK[ii]
#New Exp
b.G.KG.exp <- beta['FGGuppy:HabitatKG.exp']#post_TP$N_alpha_KG_TG[ii]
b.z.G.KG.exp <- beta['FGGuppy:HabitatKG.exp:Length.cen']#post_TP$N_slope_KG_TG[ii]
b.K.KG.exp <- beta['FGKillifish:HabitatKG.exp']#post_TP$N_alpha_KG_TK[ii]
b.z.K.KG.exp <- beta['FGKillifish:HabitatKG.exp:Length.cen']#post_TP$N_slope_KG_TK[ii]
for (i in 1:length(sizes)){
for (j in 1:length(sizes)){
#Similarity: Square pairwise differences
S.KG.nat[ii] <- S.KG.nat[ii] + (-( ( b.G.KG.nat + b.z.G.KG.nat*(sizes[i] - center.size) ) - ( b.K.KG.nat + b.z.K.KG.nat*(sizes[j] - center.size) ) )^2 ) / length(sizes)^2
S.KG.old[ii] <- S.KG.old[ii] + (-( ( b.G.KG.old + b.z.G.KG.old*(sizes[i] - center.size) ) - ( b.K.KG.old + b.z.K.KG.old*(sizes[j] - center.size) ) )^2 ) / length(sizes)^2
S.KG.exp[ii] <- S.KG.exp[ii] + (-( ( b.G.KG.exp + b.z.G.KG.exp*(sizes[i] - center.size) ) - ( b.K.KG.exp + b.z.K.KG.exp*(sizes[j] - center.size) ) )^2 ) / length(sizes)^2
S.KGP[ii] <- S.KGP[ii] + (-( ( b.G.KGP + b.z.G.KGP*(sizes[i] - center.size) ) - ( b.K.KGP + b.z.K.KGP*(sizes[j] - center.size) ) )^2 ) / length(sizes)^2
#Directional distance
D.KG.nat[ii] <- D.KG.nat[ii] + (( ( b.G.KG.nat + b.z.G.KG.nat*(sizes[i] - center.size) ) - ( b.K.KG.nat + b.z.K.KG.nat*(sizes[j] - center.size) ) ) ) / length(sizes)^2
D.KG.old[ii] <- D.KG.old[ii] + (( ( b.G.KG.old + b.z.G.KG.old*(sizes[i] - center.size) ) - ( b.K.KG.old + b.z.K.KG.old*(sizes[j] - center.size) ) ) ) / length(sizes)^2
D.KG.exp[ii] <- D.KG.exp[ii] + (( ( b.G.KG.exp + b.z.G.KG.exp*(sizes[i] - center.size) ) - ( b.K.KG.exp + b.z.K.KG.exp*(sizes[j] - center.size) ) ) ) / length(sizes)^2
D.KGP[ii] <- D.KGP[ii] + (( ( b.G.KGP + b.z.G.KGP*(sizes[i] - center.size) ) - ( b.K.KGP + b.z.K.KGP*(sizes[j] - center.size) ) ) ) / length(sizes)^2
###Killifish Differences
S.K.KGP.KG[ii] <- S.K.KGP.KG[ii] + (-( ( b.K.KGP + b.z.K.KGP*(sizes[i] - center.size) ) - ( b.K.KG.nat + b.z.K.KG.nat*(sizes[j] - center.size) ) )^2 ) / length(sizes)^2
S.K.KO.KG[ii] <- S.K.KO.KG[ii] + (-( ( b.K.KO + b.z.K.KO*(sizes[i] - center.size) ) - ( b.K.KG.nat + b.z.K.KG.nat*(sizes[j] - center.size) ) )^2 ) / length(sizes)^2
D.K.KGP.KG[ii] <- D.K.KGP.KG[ii] + (( ( b.K.KGP + b.z.K.KGP*(sizes[i] - center.size) ) - ( b.K.KG.nat + b.z.K.KG.nat*(sizes[j] - center.size) ) ) ) / length(sizes)^2
D.K.KO.KG[ii] <- D.K.KO.KG[ii] + (( ( b.K.KO + b.z.K.KO*(sizes[i] - center.size) ) - ( b.K.KG.nat + b.z.K.KG.nat*(sizes[j] - center.size) ) ) ) / length(sizes)^2
###Guppy Differences
S.G.KGP.KG[ii] <- S.G.KGP.KG[ii] + (-( ( b.G.KGP + b.z.G.KGP*(sizes[i] - center.size) ) - ( b.G.KG.nat + b.z.G.KG.nat*(sizes[j] - center.size) ) )^2 ) / length(sizes)^2
D.G.KGP.KG[ii] <- D.G.KGP.KG[ii] + (( ( b.G.KGP + b.z.G.KGP*(sizes[i] - center.size) ) - ( b.G.KG.nat + b.z.G.KG.nat*(sizes[j] - center.size) ) ) ) / length(sizes)^2
}
}
dS.nat[ii] <- S.KG.nat[ii] - S.KGP[ii]
dS.old[ii] <- S.KG.old[ii] - S.KGP[ii]
dS.exp[ii] <- S.KG.exp[ii] - S.KGP[ii]
dD.nat[ii] <- D.KG.nat[ii] - D.KGP[ii]
dD.old[ii] <- D.KG.old[ii] - D.KGP[ii]
dD.exp[ii] <- D.KG.exp[ii] - D.KGP[ii]
}
results <- list(dS.nat,dS.old,dS.exp,S.KG.nat,S.KG.exp,S.KGP,S.KG.old,dD.nat,dD.old,dD.exp,D.KG.nat,D.KG.exp,D.KGP,D.KG.old,D.K.KGP.KG,D.K.KO.KG,S.K.KGP.KG,S.K.KO.KG,S.G.KGP.KG,D.G.KGP.KG)
names(results) <- c('dS.nat','dS.old','dS.exp','S.KG.nat','S.KG.exp','S.KGP','S.KG.old','dD.nat','dD.old','dD.exp','D.KG.nat','D.KG.exp','D.KGP','D.KG.old','D.K.KGP.KG','D.K.KO.KG','S.K.KGP.KG','S.K.KO.KG','S.G.KGP.KG','D.G.KGP.KG')
return(list(results=results, params = betaDf));
}
#Run Function
d <- dS.func.comm(sizes=sizes,means=summary(mod)$coef[,c('Estimate')],vcov=summary(mod)$vcov,its=10000)
d$results
d$params
names(data)
ggplot(data, aes(x =Length, y = d15N )) +
geom_point()
ggplot(data, aes(x =Length, y = d15N, group = SP )) +
geom_point()
head(data)
ggplot(data, aes(x =Length, y = d15N, group = SP, colour = SP )) +
geom_point()
ggplot(data, aes(x =Length, y = d15N, group = SP, colour = SP )) +
geom_point() + facet_grid(Habitat ~. )
par(mfrow=c(2,3), mar = c(4, 5 ,2, 1), oma = c(0.5, 1, 1, 0.5))
toplot <- data[which(data$Habitat=='KGP'),]
toplot <- merge(x=toplot,y=rand,by='drainage',all.x=TRUE)
toplot$TPc <- toplot$TP - toplot$rand
min <- -0.1#min(toplot$TPc) - 0.1*min(toplot$TPc)
max <- 8.5#max(toplot$TPc) + 0.1*max(toplot$TPc)
plot(toplot[which(toplot$FG=='Killifish'),'Length'],toplot[which(toplot$FG=='Killifish'),'TPc'],
ylim=c(min,max),xlim=c(min(toplot$Length,na.rm=TRUE),max(toplot$Length,na.rm=TRUE)),pch=16,col='orange',bty='L',
ylab=expression(paste(Delta^{15}, "N (\u2030)")),xlab='Fish Standard Length (mm)')
points(toplot[which(toplot$FG=='Guppy'),'Length'],toplot[which(toplot$FG=='Guppy'),'TPc'],pch=16,col='grey')
gsizes <- seq(10,max(toplot[which(toplot$FG=='Guppy'),'Length'],na.rm=TRUE),by=1)
ksizes <- seq(10,max(toplot[which(toplot$FG=='Killifish'),'Length'],na.rm=TRUE),by=1)
lines(ksizes,
(summary(mod)$coef['FGKillifish:HabitatKGP','Estimate'] + summary(mod)$coef['FGKillifish:HabitatKGP:Length.cen','Estimate']*(ksizes-center.size)),
lwd=3,col='orange')
lines(gsizes,
(summary(mod)$coef['FGGuppy:HabitatKGP','Estimate'] + summary(mod)$coef['FGGuppy:HabitatKGP:Length.cen','Estimate']*(gsizes-center.size)),
lwd=3,col='black')
title(main='A) KGP',adj = 0.1, line = 0)
legend('topleft',c('Guppy','Killifish'),lty=c(1,1),pch=c(16,16),col=c('grey','orange'),bty='n')
toplot <- data[which(data$Habitat=='KG.exp'),]
#
toplot <- merge(x=toplot,y=rand,by='drainage',all.x=TRUE)
toplot$TPc <- toplot$TP - toplot$rand
plot(toplot[which(toplot$FG=='Killifish'),'Length'],toplot[which(toplot$FG=='Killifish'),'TPc'],
ylim=c(min,max),xlim=c(min(toplot$Length,na.rm=TRUE),max(toplot$Length,na.rm=TRUE)),pch=16,col='orange',bty='L',
ylab=expression(paste(Delta^{15}, "N (\u2030)")),xlab='Fish Standard Length (mm)')
points(toplot[which(toplot$FG=='Guppy'),'Length'],toplot[which(toplot$FG=='Guppy'),'TPc'],pch=16,col='grey')
gsizes <- seq(10,max(toplot[which(toplot$FG=='Guppy'),'Length'],na.rm=TRUE),by=1)
ksizes <- seq(10,max(toplot[which(toplot$FG=='Killifish'),'Length'],na.rm=TRUE),by=1)
lines(ksizes,
(summary(mod)$coef['FGKillifish:HabitatKG.exp','Estimate'] + summary(mod)$coef['FGKillifish:HabitatKG.exp:Length.cen','Estimate']*(ksizes-center.size)),
lwd=3,col='orange')
lines(gsizes,
(summary(mod)$coef['FGGuppy:HabitatKG.exp','Estimate'] + summary(mod)$coef['FGGuppy:HabitatKG.exp:Length.cen','Estimate']*(gsizes-center.size)),
lwd=3,col='black')
title(main='B) KG-New exp',adj = 0.1, line = 0)
toplot <- data[which(data$Habitat=='KG.old'),]
#
toplot <- merge(x=toplot,y=rand,by='drainage',all.x=TRUE)
toplot$TPc <- toplot$TP - toplot$rand
plot(toplot[which(toplot$FG=='Killifish'),'Length'],toplot[which(toplot$FG=='Killifish'),'TPc'],
ylim=c(min,max),xlim=c(min(toplot$Length,na.rm=TRUE),max(toplot$Length,na.rm=TRUE)),pch=16,col='orange',bty='L',
ylab=expression(paste(Delta^{15}, "N (\u2030)")),xlab='Fish Standard Length (mm)')
points(toplot[which(toplot$FG=='Guppy'),'Length'],toplot[which(toplot$FG=='Guppy'),'TPc'],pch=16,col='grey')
gsizes <- seq(10,max(toplot[which(toplot$FG=='Guppy'),'Length'],na.rm=TRUE),by=1)
ksizes <- seq(10,max(toplot[which(toplot$FG=='Killifish'),'Length'],na.rm=TRUE),by=1)
lines(ksizes,
(summary(mod)$coef['FGKillifish:HabitatKG.old','Estimate'] + summary(mod)$coef['FGKillifish:HabitatKG.old:Length.cen','Estimate']*(ksizes-center.size)),
lwd=3,col='orange')
lines(gsizes,
(summary(mod)$coef['FGGuppy:HabitatKG.old','Estimate'] + summary(mod)$coef['FGGuppy:HabitatKG.old:Length.cen','Estimate']*(gsizes-center.size)),
lwd=3,col='black')
title(main='C) KG-Old exp',adj = 0.1, line = 0)
toplot <- data[which(data$Habitat=='KG.nat'),]
toplot <- merge(x=toplot,y=rand,by='drainage',all.x=TRUE)
toplot$TPc <- toplot$TP - toplot$rand
plot(toplot[which(toplot$FG=='Killifish'),'Length'],toplot[which(toplot$FG=='Killifish'),'TPc'],
ylim=c(min,max),xlim=c(min(toplot$Length,na.rm=TRUE),max(toplot$Length,na.rm=TRUE)),pch=16,col='orange',bty='L',
ylab=expression(paste(Delta^{15}, "N (\u2030)")),xlab='Fish Standard Length (mm)')
points(toplot[which(toplot$FG=='Guppy'),'Length'],toplot[which(toplot$FG=='Guppy'),'TPc'],pch=16,col='grey')
gsizes <- seq(10,max(toplot[which(toplot$FG=='Guppy'),'Length'],na.rm=TRUE),by=1)
ksizes <- seq(10,max(toplot[which(toplot$FG=='Killifish'),'Length'],na.rm=TRUE),by=1)
lines(ksizes,
(summary(mod)$coef['FGKillifish:HabitatKG.nat','Estimate'] + summary(mod)$coef['FGKillifish:HabitatKG.nat:Length.cen','Estimate']*(ksizes-center.size)),
lwd=3,col='orange')
lines(gsizes,
(summary(mod)$coef['FGGuppy:HabitatKG.nat','Estimate'] + summary(mod)$coef['FGGuppy:HabitatKG.nat:Length.cen','Estimate']*(gsizes-center.size)),
lwd=3,col='black')
title(main='D) KG-Nat',adj = 0.1, line = 0)
toplot <- data[which(data$Habitat=='KO'),]
toplot <- merge(x=toplot,y=rand,by='drainage',all.x=TRUE)
toplot$TPc <- toplot$TP - toplot$rand
plot(toplot[which(toplot$FG=='Killifish'),'Length'],toplot[which(toplot$FG=='Killifish'),'TPc'],
ylim=c(min,max),xlim=c(min(toplot$Length,na.rm=TRUE),max(toplot$Length,na.rm=TRUE)),pch=16,col='orange',bty='L',
ylab=expression(paste(Delta^{15}, "N (\u2030)")),xlab='Fish Standard Length (mm)')
ksizes <- seq(10,max(toplot[which(toplot$FG=='Killifish'),'Length'],na.rm=TRUE),by=1)
lines(ksizes,
(summary(mod)$coef['FGKillifish:HabitatKO','Estimate'] + summary(mod)$coef['FGKillifish:HabitatKO:Length.cen','Estimate']*(ksizes-center.size)),
lwd=3,col='orange')
title(main='E) KO',adj = 0.1, line = 0)
par(mfrow=c(5,1), mar = c(4, 5 ,2, 1), oma = c(0.5, 1, 1, 0.5))
toplot <- data[which(data$Habitat=='KGP'),]
toplot <- merge(x=toplot,y=rand,by='drainage',all.x=TRUE)
toplot$TPc <- toplot$TP - toplot$rand
min <- -0.1#min(toplot$TPc) - 0.1*min(toplot$TPc)
max <- 8.5#max(toplot$TPc) + 0.1*max(toplot$TPc)
plot(toplot[which(toplot$FG=='Killifish'),'Length'],toplot[which(toplot$FG=='Killifish'),'TPc'],
ylim=c(min,max),xlim=c(min(toplot$Length,na.rm=TRUE),max(toplot$Length,na.rm=TRUE)),pch=16,col='orange',bty='L',
ylab=expression(paste(Delta^{15}, "N (\u2030)")),xlab='Fish Standard Length (mm)')
points(toplot[which(toplot$FG=='Guppy'),'Length'],toplot[which(toplot$FG=='Guppy'),'TPc'],pch=16,col='grey')
gsizes <- seq(10,max(toplot[which(toplot$FG=='Guppy'),'Length'],na.rm=TRUE),by=1)
ksizes <- seq(10,max(toplot[which(toplot$FG=='Killifish'),'Length'],na.rm=TRUE),by=1)
lines(ksizes,
(summary(mod)$coef['FGKillifish:HabitatKGP','Estimate'] + summary(mod)$coef['FGKillifish:HabitatKGP:Length.cen','Estimate']*(ksizes-center.size)),
lwd=3,col='orange')
lines(gsizes,
(summary(mod)$coef['FGGuppy:HabitatKGP','Estimate'] + summary(mod)$coef['FGGuppy:HabitatKGP:Length.cen','Estimate']*(gsizes-center.size)),
lwd=3,col='black')
title(main='A) KGP',adj = 0.1, line = 0)
legend('topleft',c('Guppy','Killifish'),lty=c(1,1),pch=c(16,16),col=c('grey','orange'),bty='n')
toplot <- data[which(data$Habitat=='KG.exp'),]
#
toplot <- merge(x=toplot,y=rand,by='drainage',all.x=TRUE)
toplot$TPc <- toplot$TP - toplot$rand
plot(toplot[which(toplot$FG=='Killifish'),'Length'],toplot[which(toplot$FG=='Killifish'),'TPc'],
ylim=c(min,max),xlim=c(min(toplot$Length,na.rm=TRUE),max(toplot$Length,na.rm=TRUE)),pch=16,col='orange',bty='L',
ylab=expression(paste(Delta^{15}, "N (\u2030)")),xlab='Fish Standard Length (mm)')
points(toplot[which(toplot$FG=='Guppy'),'Length'],toplot[which(toplot$FG=='Guppy'),'TPc'],pch=16,col='grey')
gsizes <- seq(10,max(toplot[which(toplot$FG=='Guppy'),'Length'],na.rm=TRUE),by=1)
ksizes <- seq(10,max(toplot[which(toplot$FG=='Killifish'),'Length'],na.rm=TRUE),by=1)
lines(ksizes,
(summary(mod)$coef['FGKillifish:HabitatKG.exp','Estimate'] + summary(mod)$coef['FGKillifish:HabitatKG.exp:Length.cen','Estimate']*(ksizes-center.size)),
lwd=3,col='orange')
lines(gsizes,
(summary(mod)$coef['FGGuppy:HabitatKG.exp','Estimate'] + summary(mod)$coef['FGGuppy:HabitatKG.exp:Length.cen','Estimate']*(gsizes-center.size)),
lwd=3,col='black')
title(main='B) KG-New exp',adj = 0.1, line = 0)
toplot <- data[which(data$Habitat=='KG.old'),]
#
toplot <- merge(x=toplot,y=rand,by='drainage',all.x=TRUE)
toplot$TPc <- toplot$TP - toplot$rand
plot(toplot[which(toplot$FG=='Killifish'),'Length'],toplot[which(toplot$FG=='Killifish'),'TPc'],
ylim=c(min,max),xlim=c(min(toplot$Length,na.rm=TRUE),max(toplot$Length,na.rm=TRUE)),pch=16,col='orange',bty='L',
ylab=expression(paste(Delta^{15}, "N (\u2030)")),xlab='Fish Standard Length (mm)')
points(toplot[which(toplot$FG=='Guppy'),'Length'],toplot[which(toplot$FG=='Guppy'),'TPc'],pch=16,col='grey')
gsizes <- seq(10,max(toplot[which(toplot$FG=='Guppy'),'Length'],na.rm=TRUE),by=1)
ksizes <- seq(10,max(toplot[which(toplot$FG=='Killifish'),'Length'],na.rm=TRUE),by=1)
lines(ksizes,
(summary(mod)$coef['FGKillifish:HabitatKG.old','Estimate'] + summary(mod)$coef['FGKillifish:HabitatKG.old:Length.cen','Estimate']*(ksizes-center.size)),
lwd=3,col='orange')
lines(gsizes,
(summary(mod)$coef['FGGuppy:HabitatKG.old','Estimate'] + summary(mod)$coef['FGGuppy:HabitatKG.old:Length.cen','Estimate']*(gsizes-center.size)),
lwd=3,col='black')
title(main='C) KG-Old exp',adj = 0.1, line = 0)
toplot <- data[which(data$Habitat=='KG.nat'),]
toplot <- merge(x=toplot,y=rand,by='drainage',all.x=TRUE)
toplot$TPc <- toplot$TP - toplot$rand
plot(toplot[which(toplot$FG=='Killifish'),'Length'],toplot[which(toplot$FG=='Killifish'),'TPc'],
ylim=c(min,max),xlim=c(min(toplot$Length,na.rm=TRUE),max(toplot$Length,na.rm=TRUE)),pch=16,col='orange',bty='L',
ylab=expression(paste(Delta^{15}, "N (\u2030)")),xlab='Fish Standard Length (mm)')
points(toplot[which(toplot$FG=='Guppy'),'Length'],toplot[which(toplot$FG=='Guppy'),'TPc'],pch=16,col='grey')
gsizes <- seq(10,max(toplot[which(toplot$FG=='Guppy'),'Length'],na.rm=TRUE),by=1)
ksizes <- seq(10,max(toplot[which(toplot$FG=='Killifish'),'Length'],na.rm=TRUE),by=1)
lines(ksizes,
(summary(mod)$coef['FGKillifish:HabitatKG.nat','Estimate'] + summary(mod)$coef['FGKillifish:HabitatKG.nat:Length.cen','Estimate']*(ksizes-center.size)),
lwd=3,col='orange')
lines(gsizes,
(summary(mod)$coef['FGGuppy:HabitatKG.nat','Estimate'] + summary(mod)$coef['FGGuppy:HabitatKG.nat:Length.cen','Estimate']*(gsizes-center.size)),
lwd=3,col='black')
title(main='D) KG-Nat',adj = 0.1, line = 0)
toplot <- data[which(data$Habitat=='KO'),]
toplot <- merge(x=toplot,y=rand,by='drainage',all.x=TRUE)
toplot$TPc <- toplot$TP - toplot$rand
plot(toplot[which(toplot$FG=='Killifish'),'Length'],toplot[which(toplot$FG=='Killifish'),'TPc'],
ylim=c(min,max),xlim=c(min(toplot$Length,na.rm=TRUE),max(toplot$Length,na.rm=TRUE)),pch=16,col='orange',bty='L',
ylab=expression(paste(Delta^{15}, "N (\u2030)")),xlab='Fish Standard Length (mm)')
ksizes <- seq(10,max(toplot[which(toplot$FG=='Killifish'),'Length'],na.rm=TRUE),by=1)
lines(ksizes,
(summary(mod)$coef['FGKillifish:HabitatKO','Estimate'] + summary(mod)$coef['FGKillifish:HabitatKO:Length.cen','Estimate']*(ksizes-center.size)),
lwd=3,col='orange')
title(main='E) KO',adj = 0.1, line = 0)
toplot
df <- merge(x=data,y=rand,by='drainage',all.x=TRUE)
ggplot(df, aes(x =Length, y = d15N, group = SP, colour = SP )) +
geom_point() + facet_grid(Habitat ~. )
ggplot(df, aes(x =Length, y = d15N, group = SP, colour = SP )) +
geom_point() + facet_grid(Habitat ~. ) + theme_classic()
ggplot(df, aes(x =Length, y = d15N, group = SP, colour = SP )) +
geom_point() + facet_grid(Habitat ~. ) + theme_classic() +
scale_color_manual(values = c("gray", "orange"))
pars = d$params
d <- d$results
#Run Function
d <- dS.func.comm(sizes=sizes,means=summary(mod)$coef[,c('Estimate')],vcov=summary(mod)$vcov,its=10000)
pars = d$params
d <- d$results
pars
ggplot(df, aes(x =Length, y = d15N, group = SP, colour = SP )) +
geom_point() + facet_grid(Habitat ~. ) + theme_classic() +
scale_color_manual(values = c("gray", "orange")) +
geom_smooth(method = "lm")
ggplot(df, aes(x =Length, y = d15N, group = SP, colour = SP )) +
geom_point() + facet_grid(Habitat ~. ) + theme_classic() +
scale_color_manual(values = c("gray", "orange")) +
geom_smooth(method = "lm", aes(fill=SP))
names(pars)
head(data)
levels(data$Habitat)
data$Habitat <- factor(data$Habitat)
levels((data$Habitat))
data$Habitat <- factor(data$Habitat, levels = c("KGP", "KGP.exp", "KG.old", "KG.nat", "KG.nat", "KO"))
data$Habitat <- factor(data$Habitat, levels = c("KGP", "KGP.exp", "KG.old", "KG.nat",  "KO"))
levels((data$Habitat))
df = data
levels(df$Habitat) <-  c("KGP", "KGP-E", "KG-O", "KG-N",  "KO")
levels(df$Habitat)
df <- merge(x=df,y=rand,by='drainage',all.x=TRUE)
ggplot(df, aes(x =Length, y = d15N, group = SP, colour = SP )) +
geom_point() + facet_grid(Habitat ~. ) + theme_classic() +
scale_color_manual(values = c("gray", "orange")) +
geom_smooth(method = "lm", aes(fill=SP))
levels(df$Habitat)
list(SP = rep("G", 100)),
rep(levels(df$Habitat), 100)
levels(df$Habitat)
data$Habitat <- factor(data$Habitat, levels = c("KGP", "KGP.exp", "KG.old", "KG.nat",  "KO"))
levels(data$Habitat)
data = read.csv("data/data for Pub.csv")
data$count <- 1
for (i in 1:dim(data)[1]){
data[i,'stream'] <- str_split(data$Full_name[i],'-')[[1]][1]
}
unique(data$stream)
data[which(data$stream=='El_Cedro'),'drainage'] <- 'El_Cedro'
ddply(data,c('drainage','stream','Habitat'),summarise,N=sum(count))
ddply(data,c('drainage','stream','Habitat'),summarise,N=mean(d15Nb))
ddply(data,c('drainage','stream','Habitat'),summarise,N=mean(d13Cb))
center.size <- 10
names(data)
data$Length.cen <- (data$Length - center.size)
# sample sizes
ddply(data,c('SP',"drainage","stream",'Habitat'),summarise,N=sum(count))
##################################################################################################################################
##################################################################################################################################
#15N Analyses
##################################################################################################################################
##################################################################################################################################
data$diff.d15 <- (data$d15N - data$d15Nb)
data$TP <- data$diff.d15
data$Length.cen <- (data$Length - center.size)
mod <- lmer(TP ~ 1 + FG*Habitat + FG*Habitat*Length.cen + (1|drainage), data=data )
summary(mod)
av <- anova(mod)
mod <- lmer(TP ~ 0 + FG:Habitat + FG:Habitat:Length.cen + (1|drainage), data=data )
summary(mod)
plot(mod)
rand <- ranef(mod)$drainage
rand$drainage <- dimnames(rand)[[1]]
dimnames(rand)[[2]][1] <- 'rand'
write.csv(summary(mod)$coef,"./Results/TP Parameters.csv")
write.csv(as.matrix(summary(mod)$vcov),"./Results/d15N vcov.csv")
write.csv(av,"./Results/TP Anova.csv")
levels(data$Habitat)
data$Habitat <- factor(data$Habitat)
levels(data$Habitat)
data$Habitat <- factor(data$Habitat, levels = c("KGP", "KGP.exp", "KG.old", "KG.nat",  "KO"))
levels(data$Habitat)
df = data
df = data
levels(df$Habitat) <-  c("KGP", "KGP-E", "KG-O", "KG-N",  "KO")
levels(df$Habitat)
list(SP = c(rep("G", 100), rep("G", 100), rep("G", 100), rep("G", 100)),
Habitat = c(rep("KGP", 100), rep("KG-E", 100), rep("KG-O", 100), rep("KG-N", 100)))
data.frame(list(SP = c(rep("G", 100), rep("G", 100), rep("G", 100), rep("G", 100)),
Habitat = c(rep("KGP", 100), rep("KG-E", 100), rep("KG-O", 100), rep("KG-N", 100))))
data.frame(list(SP = c(rep("G", 100), rep("G", 100), rep("G", 100), rep("G", 100)),
Habitat = c(rep("KGP", 100), rep("KG-E", 100), rep("KG-O", 100), rep("KG-N", 100))),
Length = c(1:100,1:100,1:100, 1:100))
